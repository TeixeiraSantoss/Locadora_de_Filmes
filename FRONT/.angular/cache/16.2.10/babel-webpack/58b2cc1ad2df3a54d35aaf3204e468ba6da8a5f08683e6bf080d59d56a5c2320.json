{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CadastrarGeneroComponent {\n  //\"client\" variavel para poder fazer as requisições para a \"API\"\n  //\"router\" para acessar as rotas\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    this.ultimoGeneroID = 0;\n    //variaveis que vão receber os dados do FRONT\n    this.generoNome = \"\";\n    this.generos = [];\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7035/api/genero/listar\").subscribe({\n      next: generos => {\n        this.generos = generos;\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"cadastrar\"\n  cadastrar() {\n    if (this.generos.length > 0) {\n      const ultimoGenero = this.generos[this.generos.length - 1];\n      if (ultimoGenero.generoID !== undefined) {\n        this.ultimoGeneroID = ultimoGenero.generoID;\n        console.log('Ultimo generoID:', this.ultimoGeneroID);\n      } else {\n        console.log(\"O último genero não possui um generoID definido\");\n      }\n    } else {\n      console.log('A lista de generos está vazia');\n    }\n    this.ultimoGeneroID += 1;\n    let genero = {\n      generoID: this.ultimoGeneroID,\n      generoNome: this.generoNome\n    };\n    //Fazendo requisição para a \"API\"\n    this.client.post(\"https://localhost:7035/api/genero/cadastrar\", genero).subscribe({\n      next: filme => {\n        this.router.navigate(['pages/genero/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarGeneroComponent_Factory(t) {\n    return new (t || CadastrarGeneroComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarGeneroComponent,\n    selectors: [[\"app-cadastrar-genero\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CadastrarGeneroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\");\n        i0.ɵɵtext(2, \"Genero:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarGeneroComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.generoNome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\")(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CadastrarGeneroComponent_Template_button_click_5_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(6, \" Cadastrar Produto \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.generoNome);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarGeneroComponent","constructor","client","router","ultimoGeneroID","generoNome","generos","ngOnInit","get","subscribe","next","error","erro","console","log","cadastrar","length","ultimoGenero","generoID","undefined","genero","post","filme","navigate","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarGeneroComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarGeneroComponent_Template_input_ngModelChange_3_listener","$event","CadastrarGeneroComponent_Template_button_click_5_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\genero\\cadastrar-genero\\cadastrar-genero.component.ts","C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\genero\\cadastrar-genero\\cadastrar-genero.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Genero } from 'src/app/models/genero.model';\r\n\r\n@Component({\r\n  selector: 'app-cadastrar-genero',\r\n  templateUrl: './cadastrar-genero.component.html',\r\n  styleUrls: ['./cadastrar-genero.component.css']\r\n})\r\nexport class CadastrarGeneroComponent {\r\n\r\n  ultimoGeneroID: number = 0;\r\n  //variaveis que vão receber os dados do FRONT\r\n  generoNome: string = \"\";\r\n\r\n  generos: Genero[] = [];\r\n  //\"client\" variavel para poder fazer as requisições para a \"API\"\r\n  //\"router\" para acessar as rotas\r\n  constructor(private client: HttpClient,\r\n    private router: Router){\r\n    }\r\n\r\n  ngOnInit(): void{\r\n    this.client.get<Genero[]>\r\n      (\"https://localhost:7035/api/genero/listar\")\r\n      .subscribe({\r\n        next: (generos) =>{\r\n          this.generos = generos;\r\n        }, \r\n        error: (erro) =>{\r\n          console.log(erro);\r\n        }\r\n      })\r\n  }\r\n\r\n  //Função \"cadastrar\"\r\n  cadastrar(): void{\r\n\r\n    if(this.generos.length > 0){\r\n      const ultimoGenero: Genero = this.generos[this.generos.length - 1];\r\n      if(ultimoGenero.generoID !== undefined){\r\n        this.ultimoGeneroID = ultimoGenero.generoID;\r\n        console.log('Ultimo generoID:', this.ultimoGeneroID);\r\n      } else{\r\n        console.log(\"O último genero não possui um generoID definido\");\r\n      }\r\n    } else{\r\n      console.log('A lista de generos está vazia');\r\n    }\r\n\r\n    this.ultimoGeneroID += 1;\r\n\r\n    let genero: Genero ={\r\n      generoID: this.ultimoGeneroID,\r\n      generoNome: this.generoNome\r\n    }\r\n  \r\n  //Fazendo requisição para a \"API\"\r\n  this.client.post<Genero>\r\n    (\"https://localhost:7035/api/genero/cadastrar\", genero)\r\n    .subscribe({\r\n      next: (filme) =>{\r\n        this.router.navigate(['pages/genero/listar'])\r\n      },\r\n      error: (erro) =>{\r\n        console.log(erro);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div>\r\n    <label>Genero:</label>\r\n        <input type=\"text\" [(ngModel)]=\"generoNome\"/>\r\n</div>\r\n\r\n<div>\r\n    <button (click)=\"cadastrar()\"> Cadastrar Produto </button>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}