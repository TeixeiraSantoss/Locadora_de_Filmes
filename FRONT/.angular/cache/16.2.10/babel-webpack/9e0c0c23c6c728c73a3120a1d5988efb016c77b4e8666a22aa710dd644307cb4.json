{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AlterarGeneroComponent {\n  constructor(client, router, route) {\n    this.client = client;\n    this.router = router;\n    this.route = route;\n    this.generoID = \"\";\n    this.generoNome = \"\";\n  }\n  ngOnInit() {\n    this.route.params.subscribe({\n      next: parametros => {\n        let {\n          generoNome\n        } = parametros;\n        this.client.get(`https://localhost:7035/api/genero/buscar/${generoNome}`).subscribe({\n          next: genero => {\n            this.generoID = genero.generoID.toString();\n            this.generoNome = genero.generoNome;\n          },\n          error: erro => {\n            console.log(erro);\n          }\n        });\n      }\n    });\n  }\n  alterar() {\n    let genero = {\n      generoID: Number.parseInt(this.generoID),\n      generoNome: this.generoNome\n    };\n    this.client.put();\n  }\n  static #_ = this.ɵfac = function AlterarGeneroComponent_Factory(t) {\n    return new (t || AlterarGeneroComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AlterarGeneroComponent,\n    selectors: [[\"app-alterar-genero\"]],\n    decls: 2,\n    vars: 0,\n    template: function AlterarGeneroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"alterar-genero works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AlterarGeneroComponent","constructor","client","router","route","generoID","generoNome","ngOnInit","params","subscribe","next","parametros","get","genero","toString","error","erro","console","log","alterar","Number","parseInt","put","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","_2","selectors","decls","vars","template","AlterarGeneroComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\genero\\alterar-genero\\alterar-genero.component.ts","C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\genero\\alterar-genero\\alterar-genero.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Genero } from 'src/app/models/genero.model';\n\n@Component({\n  selector: 'app-alterar-genero',\n  templateUrl: './alterar-genero.component.html',\n  styleUrls: ['./alterar-genero.component.css']\n})\nexport class AlterarGeneroComponent {\n\n  generoID: string = \"\";\n  generoNome: string = \"\";\n\n  constructor(private client: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute){}\n\n  ngOnInit(): void{\n    this.route.params.subscribe({\n      next: (parametros) =>{\n        let { generoNome } = parametros;\n\n        this.client.get<Genero>\n          (`https://localhost:7035/api/genero/buscar/${generoNome}`)\n          .subscribe({\n            next: (genero) =>{\n              this.generoID = genero.generoID.toString();\n              this.generoNome = genero.generoNome;\n            },\n            error: (erro) =>{\n              console.log(erro);\n            }\n          })\n      }\n    })    \n  }\n\n  alterar(): void{\n    let genero: Genero = {\n      generoID: Number.parseInt(this.generoID),\n      generoNome: this.generoNome\n    }\n\n    this.client.put<Genero>\n      ()\n  }\n\n}\n","<p>alterar-genero works!</p>\n"],"mappings":";;;AAUA,OAAM,MAAOA,sBAAsB;EAKjCC,YAAoBC,MAAkB,EAC5BC,MAAc,EACdC,KAAqB;IAFX,KAAAF,MAAM,GAANA,MAAM;IAChB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IALf,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,UAAU,GAAW,EAAE;EAIU;EAEjCC,QAAQA,CAAA;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAAC;MAC1BC,IAAI,EAAGC,UAAU,IAAI;QACnB,IAAI;UAAEL;QAAU,CAAE,GAAGK,UAAU;QAE/B,IAAI,CAACT,MAAM,CAACU,GAAG,CACZ,4CAA4CN,UAAU,EAAE,CAAC,CACzDG,SAAS,CAAC;UACTC,IAAI,EAAGG,MAAM,IAAI;YACf,IAAI,CAACR,QAAQ,GAAGQ,MAAM,CAACR,QAAQ,CAACS,QAAQ,EAAE;YAC1C,IAAI,CAACR,UAAU,GAAGO,MAAM,CAACP,UAAU;UACrC,CAAC;UACDS,KAAK,EAAGC,IAAI,IAAI;YACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACnB;SACD,CAAC;MACN;KACD,CAAC;EACJ;EAEAG,OAAOA,CAAA;IACL,IAAIN,MAAM,GAAW;MACnBR,QAAQ,EAAEe,MAAM,CAACC,QAAQ,CAAC,IAAI,CAAChB,QAAQ,CAAC;MACxCC,UAAU,EAAE,IAAI,CAACA;KAClB;IAED,IAAI,CAACJ,MAAM,CAACoB,GAAG,EACX;EACN;EAAC,QAAAC,CAAA,G;qBArCUvB,sBAAsB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB/B,sBAAsB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVnCb,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,4BAAqB;QAAAhB,EAAA,CAAAiB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}