{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CadastrarFilmeComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const g_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", g_r1.GeneroID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", g_r1.GeneroNome, \" \");\n  }\n}\nexport class CadastrarFilmeComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    //crio as variaveis que vão ser enviadas para a API\n    this.nome = \"\";\n    this.classif_ind = 0;\n    this.ano_lanc = 0;\n    this.alugado = false;\n    this.generoID = 0;\n    this.generos = [];\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7035/api/genero/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: generos => {\n        console.table(generos);\n        this.generos = generos;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar() {\n    let filme = {\n      Nome: this.nome,\n      Classif_ind: this.classif_ind,\n      Ano_lanc: this.ano_lanc,\n      Alugado: this.alugado,\n      GeneroID: this.generoID\n    };\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post(\"https://localhost:7035/api/filme/cadastrar\", filme).subscribe({\n      //Requisição deu certo\n      next: filme => {\n        this.router.navigate(['pages/filme/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarFilmeComponent_Factory(t) {\n    return new (t || CadastrarFilmeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarFilmeComponent,\n    selectors: [[\"app-cadastrar-filme\"]],\n    decls: 22,\n    vars: 5,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"]],\n    template: function CadastrarFilmeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastrar Filme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.nome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Classifica\\u00E7\\u00E3o Indicativa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.classif_ind = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Ano de Lan\\u00E7amento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.ano_lanc = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n        i0.ɵɵtext(16, \"Generos:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_select_ngModelChange_17_listener($event) {\n          return ctx.generoID = $event;\n        });\n        i0.ɵɵtemplate(18, CadastrarFilmeComponent_option_18_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\")(20, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function CadastrarFilmeComponent_Template_button_click_20_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(21, \"Cadastrar Produto\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.nome);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.classif_ind);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ano_lanc);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.generoID);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.generos);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","g_r1","GeneroID","ɵɵadvance","ɵɵtextInterpolate1","GeneroNome","CadastrarFilmeComponent","constructor","client","router","nome","classif_ind","ano_lanc","alugado","generoID","generos","ngOnInit","get","subscribe","next","console","table","error","erro","log","cadastrar","filme","Nome","Classif_ind","Ano_lanc","Alugado","post","navigate","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarFilmeComponent_Template","rf","ctx","ɵɵlistener","CadastrarFilmeComponent_Template_input_ngModelChange_5_listener","$event","CadastrarFilmeComponent_Template_input_ngModelChange_9_listener","CadastrarFilmeComponent_Template_input_ngModelChange_13_listener","CadastrarFilmeComponent_Template_select_ngModelChange_17_listener","ɵɵtemplate","CadastrarFilmeComponent_option_18_Template","CadastrarFilmeComponent_Template_button_click_20_listener","ɵɵproperty"],"sources":["C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\filme\\cadastrar-filme\\cadastrar-filme.component.ts","C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\filme\\cadastrar-filme\\cadastrar-filme.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Filme } from 'src/app/models/filme.model';\r\nimport { Genero } from 'src/app/models/genero.model';\r\n\r\n@Component({\r\n  selector: 'app-cadastrar-filme',\r\n  templateUrl: './cadastrar-filme.component.html',\r\n  styleUrls: ['./cadastrar-filme.component.css']\r\n})\r\nexport class CadastrarFilmeComponent {\r\n\r\n  //crio as variaveis que vão ser enviadas para a API\r\n  nome: string = \"\";\r\n  classif_ind: number = 0;\r\n  ano_lanc: number = 0;\r\n  alugado: boolean = false;\r\n  generoID: number = 0;\r\n  generos : Genero[] = [];\r\n\r\n  constructor(private client: HttpClient,\r\n    private router: Router){}\r\n\r\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\r\n  ngOnInit(): void{\r\n    this.client.get<Genero[]>\r\n      (\"https://localhost:7035/api/genero/listar\")\r\n      .subscribe({\r\n        //caso a requisição funcione, vai execultar esse código\r\n        \r\n        //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\r\n        next: (generos) => {\r\n          console.table(generos);\r\n          this.generos = generos;\r\n        },\r\n\r\n        //caso a requisição falhe\r\n        error : (erro) => {\r\n          console.log(erro)\r\n        }\r\n      })\r\n  }\r\n\r\n  //Função \"Cadastrar\"\r\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\r\n  cadastrar(): void{\r\n    let filme: Filme ={\r\n      Nome: this.nome,\r\n      Classif_ind: this.classif_ind,\r\n      Ano_lanc: this.ano_lanc,\r\n      Alugado: this.alugado,\r\n      GeneroID: this.generoID\r\n    }; \r\n\r\n    //Fazendo a requisição de cadastro para a \"API\"\r\n    this.client.post<Filme>\r\n      //para fazer uma requisição \"POST\", são necessarias 2 coisas\r\n      //1 - A rota da requisição que está na \"API\"\r\n      //2 - Passar um objeto para ir junto com a requisição\r\n      (\"https://localhost:7035/api/filme/cadastrar\", filme)\r\n      .subscribe({\r\n        //Requisição deu certo\r\n        next: (filme) => {\r\n          this.router.navigate(['pages/filme/listar'])\r\n        },\r\n        error: (erro) =>{\r\n          console.log(erro);\r\n        }\r\n      })\r\n  };\r\n\r\n}\r\n","<h1>Cadastrar Filme</h1>\r\n\r\n<div>\r\n  <label>Nome:</label>\r\n  <input type=\"text\" [(ngModel)]=\"nome\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Classificação Indicativa:</label>\r\n  <input type=\"text\" [(ngModel)]=\"classif_ind\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Ano de Lançamento:</label>\r\n  <input type=\"text\" [(ngModel)]=\"ano_lanc\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Generos:</label>\r\n  <select [(ngModel)]=\"generoID\">\r\n    <option *ngFor=\"let g of generos\" value=\"{{ g.GeneroID }}\">\r\n      {{ g.GeneroNome }}\r\n    </option>\r\n  </select>\r\n</div>\r\n\r\n<div>\r\n  <button (click)=\"cadastrar()\">Cadastrar Produto</button>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}