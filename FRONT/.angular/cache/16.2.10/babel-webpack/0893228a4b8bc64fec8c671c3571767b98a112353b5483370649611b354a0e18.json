{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CadastrarFilmeComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    this.nome = \"\";\n    this.classif_ind = \"\";\n    this.ano_lanc = \"\";\n    this.alugado = false;\n    this.generoID = 0;\n    this.generos = [];\n  }\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\n  ngOnInit() {\n    this.client.get(\"https://localhost:7035/api/genero/listar\").subscribe({\n      //caso a requisição funcione, vai execultar esse código\n      //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\n      next: generos => {\n        console.table(generos);\n        this.generos = generos;\n      },\n      //caso a requisição falhe\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  //Função \"Cadastrar\"\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\n  cadastrar() {\n    let filme = {\n      Nome: this.nome,\n      Classif_ind: Number.parseInt(this.classif_ind),\n      Ano_lanc: Number.parseInt(this.ano_lanc),\n      Alugado: this.alugado,\n      GeneroID: this.generoID\n    };\n    //Fazendo a requisição de cadastro para a \"API\"\n    this.client.post(\"https://localhost:7035/api/filme/cadastrar\", filme).subscribe({\n      //Requisição deu certo\n      next: filme => {\n        this.router.navigate(['pages/filme/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CadastrarFilmeComponent_Factory(t) {\n    return new (t || CadastrarFilmeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CadastrarFilmeComponent,\n    selectors: [[\"app-cadastrar-filme\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function CadastrarFilmeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastrar Filme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.nome = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Classifica\\u00E7\\u00E3o Indicativa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.classif_ind = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Ano de Lan\\u00E7amento:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.ano_lanc = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n        i0.ɵɵtext(16, \"Genero:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CadastrarFilmeComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.generoID = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function CadastrarFilmeComponent_Template_button_click_19_listener() {\n          return ctx.cadastrar();\n        });\n        i0.ɵɵtext(20, \"Cadastrar Produto\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.nome);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.classif_ind);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.ano_lanc);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.generoID);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CadastrarFilmeComponent","constructor","client","router","nome","classif_ind","ano_lanc","alugado","generoID","generos","ngOnInit","get","subscribe","next","console","table","error","erro","log","cadastrar","filme","Nome","Classif_ind","Number","parseInt","Ano_lanc","Alugado","GeneroID","post","navigate","_","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","CadastrarFilmeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastrarFilmeComponent_Template_input_ngModelChange_5_listener","$event","CadastrarFilmeComponent_Template_input_ngModelChange_9_listener","CadastrarFilmeComponent_Template_input_ngModelChange_13_listener","CadastrarFilmeComponent_Template_input_ngModelChange_17_listener","CadastrarFilmeComponent_Template_button_click_19_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\filme\\cadastrar-filme\\cadastrar-filme.component.ts","C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\filme\\cadastrar-filme\\cadastrar-filme.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Filme } from 'src/app/models/filme.model';\r\nimport { Genero } from 'src/app/models/genero.model';\r\n\r\n@Component({\r\n  selector: 'app-cadastrar-filme',\r\n  templateUrl: './cadastrar-filme.component.html',\r\n  styleUrls: ['./cadastrar-filme.component.css']\r\n})\r\nexport class CadastrarFilmeComponent {\r\n\r\n  //crio as variaveis que vão ser enviadas para a API\r\n  filmeID: string\r\n  nome: string = \"\";\r\n  classif_ind: string = \"\";\r\n  ano_lanc: string = \"\";\r\n  alugado: boolean = false;\r\n  generoID: number = 0;\r\n  generos : Genero[] = [];\r\n\r\n  constructor(private client: HttpClient,\r\n    private router: Router){}\r\n\r\n  //Requisição que recebe uma lista de \"Genero\" da \"API\", e recebe essa lista em memoria no front\r\n  ngOnInit(): void{\r\n    this.client.get<Genero[]>\r\n      (\"https://localhost:7035/api/genero/listar\")\r\n      .subscribe({\r\n        //caso a requisição funcione, vai execultar esse código\r\n        \r\n        //basicamente, esse trecho está recebendo uma lista de \"generos\" da \"API\", e está recebendo para o array \"generos\" declrado junto aos atributos\r\n        next: (generos) => {\r\n          console.table(generos);\r\n          this.generos = generos;\r\n        },\r\n\r\n        //caso a requisição falhe\r\n        error : (erro) => {\r\n          console.log(erro)\r\n        }\r\n      })\r\n  }\r\n\r\n  //Função \"Cadastrar\"\r\n  //Para fazer o cadastrar, eu passo um objeto do tipo \"Filme\", com os dados necessarios\r\n  cadastrar(): void{\r\n    let filme: Filme ={\r\n      Nome: this.nome,\r\n      Classif_ind: Number.parseInt(this.classif_ind),\r\n      Ano_lanc: Number.parseInt(this.ano_lanc),\r\n      Alugado: this.alugado,\r\n      GeneroID: this.generoID\r\n    }; \r\n\r\n    //Fazendo a requisição de cadastro para a \"API\"\r\n    this.client.post<Filme>\r\n      //para fazer uma requisição \"POST\", são necessarias 2 coisas\r\n      //1 - A rota da requisição que está na \"API\"\r\n      //2 - Passar um objeto para ir junto com a requisição\r\n      (\"https://localhost:7035/api/filme/cadastrar\", filme)\r\n      .subscribe({\r\n        //Requisição deu certo\r\n        next: (filme) => {\r\n          this.router.navigate(['pages/filme/listar'])\r\n        },\r\n        error: (erro) =>{\r\n          console.log(erro);\r\n        }\r\n      })\r\n  };\r\n\r\n}\r\n","<h1>Cadastrar Filme</h1>\r\n\r\n<div>\r\n  <label>Nome:</label>\r\n  <input type=\"text\" [(ngModel)]=\"nome\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Classificação Indicativa:</label>\r\n  <input type=\"text\" [(ngModel)]=\"classif_ind\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Ano de Lançamento:</label>\r\n  <input type=\"text\" [(ngModel)]=\"ano_lanc\" />\r\n</div>\r\n\r\n<div>\r\n  <label>Genero:</label>\r\n  <input type=\"text\" [(ngModel)]=\"generoID\" />\r\n</div>\r\n\r\n<!-- <div>\r\n  <label>Generos:</label>\r\n  <select [(ngModel)]=\"generoID\">\r\n    <option *ngFor=\"let g of generos\" value=\"{{ g.GeneroID }}\">\r\n      {{ g.GeneroNome }}\r\n    </option>\r\n  </select>\r\n</div> -->\r\n\r\n<div>\r\n  <button (click)=\"cadastrar()\">Cadastrar Produto</button>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}