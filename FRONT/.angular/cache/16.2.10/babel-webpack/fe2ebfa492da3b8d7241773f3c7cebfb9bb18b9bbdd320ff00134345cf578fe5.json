{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AlugarFilmeComponent = class AlugarFilmeComponent {\n  constructor(route, client) {\n    this.route = route;\n    this.client = client;\n    this.filmeId = 0;\n    this.cpf = 0;\n    this.filme = null;\n    this.usuario = null;\n    this.usuarios = [];\n    this.nome = \"\";\n  }\n  ngOnInit() {\n    // Recupera o ID do filme da rota\n    this.route.params.subscribe(params => {\n      this.filmeId = params['filmeID'];\n      this.carregarFilme();\n    });\n    this.client.get(\"https://localhost:7035/api/usuario/listar\").subscribe({\n      next: usuarios => {\n        this.usuarios = usuarios;\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  carregarFilme() {\n    // Carrega informações do filme usando o ID\n    this.client.get(`https://localhost:7035/api/filme/buscar/${this.filmeId}`).subscribe({\n      next: filme => {\n        console.table(filme);\n        this.filme = filme;\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  alugar() {\n    // Faz a chamada para o endpoint de aluguel\n    this.client.get(`https://localhost:7035/api/usuario/alugar/${this.filmeId}/${this.cpf}`).subscribe({\n      next: () => {\n        console.log(`Filme ${this.filme?.nome} alugado pelo usuário com CPF ${this.cpf}`);\n        // Redireciona para a página de filmes disponíveis após o aluguel\n        window.location.href = '/pages/filme/disponiveis';\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  buscarUsuarioPorNome() {\n    if (!this.nome) {\n      // Se o nome estiver vazio, não fazer a busca\n      return;\n    }\n    // Realizar a busca na lista local\n    this.usuarios = this.usuarios.filter(usuario => usuario.nome.toLowerCase().includes(this.nome.toLowerCase()));\n  }\n};\nAlugarFilmeComponent = __decorate([Component({\n  selector: 'app-alugar-filme',\n  templateUrl: './alugar-filme.component.html',\n  styleUrls: ['./alugar-filme.component.css']\n})], AlugarFilmeComponent);","map":{"version":3,"names":["Component","AlugarFilmeComponent","constructor","route","client","filmeId","cpf","filme","usuario","usuarios","nome","ngOnInit","params","subscribe","carregarFilme","get","next","error","erro","console","log","table","alugar","window","location","href","buscarUsuarioPorNome","filter","toLowerCase","includes","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mathe\\Documents\\Locadora_de_Filmes\\FRONT\\src\\app\\pages\\filme\\alugar-filme\\alugar-filme.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Filme } from 'src/app/models/filme.model';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-alugar-filme',\n  templateUrl: './alugar-filme.component.html',\n  styleUrls: ['./alugar-filme.component.css']\n})\nexport class AlugarFilmeComponent {\n  filmeId: number = 0;\n  cpf: number = 0;\n  filme: Filme | null = null;\n  usuario: Usuario | null = null;\n  usuarios: Usuario[] = [];\n  nome: string = \"\";\n\n  constructor(private route: ActivatedRoute, private client: HttpClient) {}\n\n  ngOnInit(): void {\n    // Recupera o ID do filme da rota\n    this.route.params.subscribe(params => {\n      this.filmeId = params['filmeID'];\n      this.carregarFilme();\n    });\n\n    this.client.get<Usuario[]>\n      (\"https://localhost:7035/api/usuario/listar\")\n      .subscribe({\n        next: (usuarios) =>{\n          this.usuarios = usuarios\n        },\n        error: (erro) =>{\n          console.log(erro)\n        }\n      });\n  }\n\n  carregarFilme(): void {\n    // Carrega informações do filme usando o ID\n    this.client.get<Filme>(`https://localhost:7035/api/filme/buscar/${this.filmeId}`).subscribe({\n      next: (filme) => {\n        console.table(filme)\n        this.filme = filme;\n      },\n      error: (erro) => {\n        console.log(erro);\n      }\n    });\n  }\n\n  alugar(): void {\n    // Faz a chamada para o endpoint de aluguel\n    this.client.get(`https://localhost:7035/api/usuario/alugar/${this.filmeId}/${this.cpf}`).subscribe({\n      next: () => {\n        console.log(`Filme ${this.filme?.nome} alugado pelo usuário com CPF ${this.cpf}`);\n        // Redireciona para a página de filmes disponíveis após o aluguel\n        window.location.href = '/pages/filme/disponiveis';\n      },\n      error: (erro) => {\n        console.log(erro);\n      }\n    });\n  }\n\n  buscarUsuarioPorNome(): void {\n    if (!this.nome) {\n      // Se o nome estiver vazio, não fazer a busca\n      return;\n    }\n\n    // Realizar a busca na lista local\n    this.usuarios = this.usuarios.filter(usuario =>\n      usuario.nome.toLowerCase().includes(this.nome.toLowerCase())\n    );\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAQ/BC,YAAoBC,KAAqB,EAAUC,MAAkB;IAAjD,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAPzD,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,GAAG,GAAW,CAAC;IACf,KAAAC,KAAK,GAAiB,IAAI;IAC1B,KAAAC,OAAO,GAAmB,IAAI;IAC9B,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,IAAI,GAAW,EAAE;EAEuD;EAExEC,QAAQA,CAAA;IACN;IACA,IAAI,CAACR,KAAK,CAACS,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACP,OAAO,GAAGO,MAAM,CAAC,SAAS,CAAC;MAChC,IAAI,CAACE,aAAa,EAAE;IACtB,CAAC,CAAC;IAEF,IAAI,CAACV,MAAM,CAACW,GAAG,CACZ,2CAA2C,CAAC,CAC5CF,SAAS,CAAC;MACTG,IAAI,EAAGP,QAAQ,IAAI;QACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAC1B,CAAC;MACDQ,KAAK,EAAGC,IAAI,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB;KACD,CAAC;EACN;EAEAJ,aAAaA,CAAA;IACX;IACA,IAAI,CAACV,MAAM,CAACW,GAAG,CAAQ,2CAA2C,IAAI,CAACV,OAAO,EAAE,CAAC,CAACQ,SAAS,CAAC;MAC1FG,IAAI,EAAGT,KAAK,IAAI;QACdY,OAAO,CAACE,KAAK,CAACd,KAAK,CAAC;QACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;MACpB,CAAC;MACDU,KAAK,EAAGC,IAAI,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAEAI,MAAMA,CAAA;IACJ;IACA,IAAI,CAAClB,MAAM,CAACW,GAAG,CAAC,6CAA6C,IAAI,CAACV,OAAO,IAAI,IAAI,CAACC,GAAG,EAAE,CAAC,CAACO,SAAS,CAAC;MACjGG,IAAI,EAAEA,CAAA,KAAK;QACTG,OAAO,CAACC,GAAG,CAAC,SAAS,IAAI,CAACb,KAAK,EAAEG,IAAI,iCAAiC,IAAI,CAACJ,GAAG,EAAE,CAAC;QACjF;QACAiB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,0BAA0B;MACnD,CAAC;MACDR,KAAK,EAAGC,IAAI,IAAI;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAEAQ,oBAAoBA,CAAA;IAClB,IAAI,CAAC,IAAI,CAAChB,IAAI,EAAE;MACd;MACA;;IAGF;IACA,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACkB,MAAM,CAACnB,OAAO,IAC1CA,OAAO,CAACE,IAAI,CAACkB,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACnB,IAAI,CAACkB,WAAW,EAAE,CAAC,CAC7D;EACH;CAED;AApEY3B,oBAAoB,GAAA6B,UAAA,EALhC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhC,oBAAoB,CAoEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}